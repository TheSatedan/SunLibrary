<?php
/**
 * Flat bed slider.
 *
 * @author          Andrew Jeffries <andrew@sunsetcoders.com.au>
 * @author          Simon Mitchell <kartano@gmail.com>
 * @version         1.0.0               2016-11-28 08:48:35 SM:  Prototype.
 * @version         1.0.1               2016-12-13 16:24:29 SM:  Uses database.
 * @version         1.1.0               2016-12-15 08:46:48 SM:  Uses SunLibraryModule.
 * @version         1.1.1               2016-12-16 16:27:57 SM:  Added doco.
 */

require_once dirname(dirname(__FILE__)).'/SunLibraryModule.php';

/**
 * Flatbedslider module.
 */
class flatbedslider extends SunLibraryModule
{
    /**
     * {@inheritdoc}
     *
     * @param mysqli $dbConnection Connection to the database.
     * @return void
     */
    function __construct(mysqli $dbConnection)
    {
        parent::__construct($dbConnection);
    }

    /**
     * Flatbedslider.  This is NOT a constructor.
     *
     * @return void
     */
    public function flatbedslider()
    {
        //    
    }

    /**
     * Upload file.
     *
     * @return void
     */
    public function uploadFile()
    {
        $target_dir = "../Images/";
        $target_file = $target_dir . basename($_FILES["fileToUpload"]["name"]);
        $target_filename = basename($_FILES["fileToUpload"]["name"]);

        $uploadOk = 1;
        $imageFileType = pathinfo($target_file, PATHINFO_EXTENSION);

        // Check if image file is a actual image or fake image
        if (isset($_POST["submit"])) {
            $check = getimagesize($_FILES["fileToUpload"]["tmp_name"]);
            if ($check !== false) {
                echo "File is an image - " . $check["mime"] . ".";
                $uploadOk = 1;
            } else {
                echo "File is not an image.";
                $uploadOk = 0;
            }
        }

        // Check if file already exists
        if (file_exists($target_file)) {
            echo "Sorry, file already exists.";
            $uploadOk = 0;
        }
        // Check file size
        if ($_FILES["fileToUpload"]["size"] > 500000) {
            echo "Sorry, your file is too large.";
            $uploadOk = 0;
        }
        // Allow certain file formats
        if ($imageFileType != "jpg" && $imageFileType != "png" && $imageFileType != "jpeg" && $imageFileType != "gif") {
            echo "Sorry, only JPG, JPEG, PNG & GIF files are allowed.";
            $uploadOk = 0;
        }

        // Check if $uploadOk is set to 0 by an error
        if ($uploadOk == 0) {
            echo "Sorry, your file was not uploaded.";

            // if everything is ok, try to upload file
        } else {
            if (move_uploaded_file($_FILES["fileToUpload"]["tmp_name"], $target_file)) {
                echo "The file " . basename($_FILES["fileToUpload"]["name"]) . " has been uploaded.";
            } else {
                echo "Sorry, there was an error uploading your file.";
            }
        }

        /*
         * Update Teampanel Database with the new Image information.
         */

        $contentImageName = $target_filename;
        $contentCode = filter_input(INPUT_POST, 'contentCode');

        $stmt = $this->objDB->prepare("UPDATE teampanel SET $contentCode=? WHERE teampanelID=1");
        $stmt->bind_param('s', $contentImageName);

        if ($stmt === false)
            trigger_error($this->objDB->error, E_USER_ERROR);
        $status = $stmt->execute();
        if ($status === false) 
            trigger_error($stmt->error, E_USER_ERROR);
?>
        <font color="black">
            <b>Content Image Information Updated <br><br> Please Wait!!!!</b><br>
            <meta http-equiv="refresh" content="1;url=?id=FlatbedSlider">
        </font>
<?php
    }

    /**
     * {@inheritdoc}
     *
     * @return void
     */
    public function renderCustomJavaScript()
    {
?>
        $("#slideshow > div:gt(0)").hide();
        setInterval(function () {
            $('#slideshow > div:first')
            .fadeOut(2000)
            .next()
            .fadeIn(2000)
            .end()
            .appendTo('#slideshow');
         }, 5000);
<?php
    }

    /**
     * {@inheritdoc}
     *
     * @return void
     */
    public function callToFunction()
    {
?>
        <div id="flatbed-background">
            <div id="slideshow">
<?php
                $leftRef = $this->objBD->prepare("SELECT imageToSlide FROM flatbedslider ORDER BY sliderOrder");
                $leftRef->execute();
                $leftRef->bind_result($imageToSlide);
                while ($checkRow = $leftRef->fetch())
                {
?>
                    <div><img src="<?=IMAGE_PATH;?>/<?=$imageToSlide;?>" height="280"></div>
<?php
                }
                $leftRef->close();
?>
            </div>
        </div>
<?php
    }

    /**
     * {@inheritdoc}
     *
     * @return void
     */
    protected function assertTablesExist()
    {
        $objResult=$this->objDB->query('select 1 from `flatbedslider` LIMIT 1');
        if ($objResult===false)
        {
            $createTable = $this->objDB->prepare("CREATE TABLE flatbedslider (sliderID INT(11) AUTO_INCREMENT PRIMARY KEY, imageToSlide VARCHAR(100) NOT NULL, sliderOrder DECIMAL(3,0) NOT NULL)");
            $createTable->execute();
            $createTable->close();
        }
        else
            $objResult->free();
    }

    /**
     * {@inheritdoc}
     *
     * @return string The module version number, as read from this file's docblock.
     */
    public function getVersion()
    {
        return $this->readVersionFromFile(__FILE__);
    }
}

